version: "3"

volumes:
  volume_name: 
    name: vms-volume-mount

services:
  migrations:
    image: ocano/streampod-vms:v1.1.4
    ports:
    - 8000
    volumes:
      - ./:/home/streampod.io/streampod/
    environment:
      ENABLE_UWSGI: 'no'
      ENABLE_NGINX: 'no'
      ENABLE_CELERY_SHORT: 'no'
      ENABLE_CELERY_LONG: 'no'
      ENABLE_CELERY_BEAT: 'no'
      ADMIN_USER: 'admin'
      ADMIN_EMAIL: 'admin@localhost'
      #ADMIN_PASSWORD: 'uncomment_and_set_password_here'
    command: "./deploy/docker/prestart.sh"
    restart: on-failure
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
  web:
    image: ocano/streampod-vms:v1.1.4
    deploy:
      replicas: 1
    ports:
      - "80:80"
    volumes:
      - ./:/home/streampod.io/streampod/
    environment:
      ENABLE_CELERY_BEAT: 'no'
      ENABLE_CELERY_SHORT: 'no'
      ENABLE_CELERY_LONG: 'no'
      ENABLE_MIGRATIONS: 'no'
    depends_on:
      - migrations
  celery-beat:
    image: ocano/streampod-vms:v1.1.4
    ports:
    - 6379
    volumes:
      - ./:/home/streampod.io/streampod/
    environment:
      ENABLE_UWSGI: 'no'
      ENABLE_NGINX: 'no'
      ENABLE_CELERY_SHORT: 'no'
      ENABLE_CELERY_LONG: 'no'
      ENABLE_MIGRATIONS: 'no'
    depends_on:
      - redis
  celery-worker:
    image: ocano/streampod-vms:v1.1.4
    ports:
    - 6379
    deploy:
      replicas: 1
    volumes:
      - ./:/home/streampod.io/streampod/
    environment:
      ENABLE_UWSGI: 'no'
      ENABLE_NGINX: 'no'
      ENABLE_CELERY_BEAT: 'no'
      ENABLE_MIGRATIONS: 'no'
    depends_on:
      - migrations
  db:
    image: postgres:15.2-alpine
    ports: 
    - 5432
    volumes:
      - ${PWD}/vms-volume-mount:/var/lib/postgresql/data/
    restart: always
    environment:
      POSTGRES_USER: streampod
      POSTGRES_PASSWORD: streampod
      POSTGRES_DB: streampod
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "--host=db", "--dbname=$POSTGRES_DB", "--username=$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: "redis:alpine"
    ports: 
    - 6379
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 30s
      timeout: 10s
      retries: 3
